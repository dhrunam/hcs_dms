from rest_framework import serializers
from crs import models
from django.contrib.auth.models import (User, Group)
from rest_framework.validators import UniqueValidator
from django.contrib.auth.password_validation import validate_password
from rest_framework.response import Response
from rest_framework import status
from django.db import transaction, connection


class CaseTypeTSerializer(serializers.ModelSerializer):
    class Meta:
        model = models.CaseTypeT
        fields = [
            'case_type',
            'type_name',
            'ltype_name',
            'full_form',
            'lfull_form',
            'type_flag',
            'filing_no',
            'filing_year',
            'reg_no',
            'reg_year',
            'display',
            'petitioner',
            'respondent',
            'lpetitioner',
            'lrespondent',
            'res_disp',
            'case_priority',
            'national_code',
            'macp',
            'stage_id',
            'matter_type',
            'cavreg_no',
            'cavreg_year',
            'direct_reg',
            'cavfil_no',
            'cavfil_year',
            'ia_filing_no',
            'ia_filing_year',
            'ia_reg_no',
            'ia_reg_year',
            'tag_courts',
            'amd',
            'create_modify',
            'reasonable_dispose',
            'hideparty',
            'est_code_src'

        ]


class CivAddressTSerializer(serializers.ModelSerializer):

    class Meta:
        model = models.CivAddressTA
        fields = [
            'party_no',
            'filing_no',
            'case_no',
            'orgid',
            'name',
            'lname',
            'pet_age',
            'father_name',
            'lfather_name',
            'father_flag',
            'pet_caste',
            'type',
            'adv_name',
            'ladv_name',
            'adv_cd',
            'display',
            'legal_heir',
            'pet_email',
            'pet_mobile',
            'parentid',
            'pet_sex',
            'uid_no',
            'performaresflag',
            'hide_partyname',
            'party_id',
            'split_case_refno',
            'split_case_flag',
            'old_party_no',
            'hashkey',
            'extra_inperson',
            'party_status',
            'cino',
            'pet_gender',
            'name_salutation',
            'amd',
            'create_modify',
            'prid'

        ]


class JudgeNameTSerilaizer(serializers.ModelSerializer):
    class Meta:
        model = models.JudgeNameT
        fields = [
            'judge_code',
            'judge_name',
            'ljudge_name',
            'desg_code',
            'display',
            'jocode',
            'state_code',
            'jto_dt',
            'jfrom_dt',
            'judge_priority',
            'short_judge_name',
            'amd',
            'create_modify',
            'est_code_src',
            'not_jocode'
        ]


class ExtraAdvTSerializer(serializers.ModelSerializer):

    class Meta:
        model = models.ExtraAdvT
        fields = [
            'case_no',
            'pet_res',
            'lpet_res',
            'type',
            'adv_name',
            'ladv_name',
            'adv_code',
            'party_no',
            'sr_no',
            'cino',
            'srno',
            'amd',
            'create_modify'
        ]


class CivilTSerializer(serializers.ModelSerializer):
    related_case_type = CaseTypeTSerializer(source='regcase_type',
                                            many=False, read_only=True)
    # related_extra_part = CivAddressTSerializer(
    #     source='cino', many=True, read_only=True)
    # related_judge = JudgeNameTSerilaizer(
    #     source='judge_code', many=False, read_only=True)

    class Meta:
        model = models.CivilTA

        fields = [
            'case_no',
            'pet_name',
            'lpet_name',
            'pet_sex',
            'res_name',
            'lres_name',
            'res_sex',
            'court_no',
            'date_of_filing',
            'time_of_filing',
            'date_first_list',
            'date_next_list',
            'date_last_list',
            'date_of_decision',
            'dec_jud_name',
            'pet_adv',
            'pet_adv_cd',
            'lpet_adv',
            'res_adv',
            'res_adv_cd',
            'lres_adv',
            'filing_no',
            'amount',
            'juri_value',
            'purpose_prev',
            'purpose_next',
            'subject1',
            'caveat',
            'unit',
            'goshwara_no',
            'disp_nature',
            'pet_father_name',
            'lpet_father_name',
            'pet_father_flag',
            'pet_caste',
            'pet_age',
            'pet_email',
            'pet_mobile',
            'res_father_name',
            'lres_father_name',
            'res_father_flag',
            'res_caste',
            'res_age',
            'res_email',
            'res_mobile',
            'dt_regis',
            'display',
            'date_filing_disp',
            'pet_legal_heir',
            'res_legal_heir',
            'ci_cri',
            'link_code',
            'reason_for_rej',
            'lreason_for_rej',
            'not_before_me',
            'before_me',
            'obj_flag',
            'date_filing_disp_o',
            'date_filing_restore',
            'date_of_decision_o',
            'date_of_revoke',
            'urgent',
            'main_case_no',
            'chk',
            'reg_pl',
            'orgid',
            'resorgid',
            'pet_dob',
            'res_dob',
            'plead_guilty',
            'nature_cd',
            'legacy_flag',
            'pet_extracount',
            'res_extracount',
            'order_sect_kar',
            'nature_kar',
            'allocation_dt',
            'rej_sr_no',
            'unit_type',
            'unit_type_value',
            'transfer_est',
            'imprisonment',
            'bal_fee_date',
            'pet_uid',
            'res_uid',
            'reasonregisdate',
            'oldcase_no',
            'performaresflag',
            'reasonfilingdate',
            'oldfiling_no',
            'hide_pet_name',
            'hide_res_name',
            'hide_partyname',
            'filcase_type',
            'fil_no',
            'fil_year',
            'regcase_type',
            'reg_no',
            'reg_year',
            'goshwara_no_o',
            'disp_nature_o',
            'archive',
            'tab_status',
            'lsubject1',
            'pending_ia',
            'ia_next_date',
            'time_slot',
            'purpose_today',
            'subpurpose_today',
            'main_matter_cino',
            'split_case_refno',
            'split_case_flag',
            'jocode',
            'hashkey',
            'dormant_sinedie',
            'pet_inperson',
            'res_inperson',
            'pet_status',
            'res_status',
            'grouped',
            'cino',
            'subnature_cd1',
            'subnature_cd2',
            'branch_id',
            'bench_type',
            'sr_no',
            'causelist_type',
            'next_date_check',
            'status_id',
            'link_criteria',
            'c_subject',
            'cs_subject',
            'css_subject',
            'judge_code',
            'desig_code',
            'pet_gender',
            'res_gender',
            'pet_salutation',
            'res_salutation',
            'case_remark',
            'under_obj',
            'amd',
            'create_modify',
            'csss_subject',
            'tied_up',
            'extra_link',
            'ag_office',
            'afidvt',
            'connected_type',
            'link_cino',
            'bunch',
            'short_order',
            'maincase_filing_no',
            'last_status',
            'sub_cino',
            'vc_flag',
            'claim_juri_value',
            'vehicle_regn_no',
            'license_no',
            'random_alloc',
            'regular_proc',
            'datacorrection',
            'auto_date',
            'auto_date_flag',
            'transfer_remark',
            'eflag',
            'efilno',
            'status',
            'caveat_tag_date',
            'pet_prid',
            'res_prid',
            'send_to_vcourt',
            'receipt_from_vcourt',
            'vcourt_cnr',
            'vcourt_sent_flag',
            'vcourt_receive_flag',
            'notify_court_id',
            'efiling_type',
            'related_case_type',
            # 'related_extra_part',
            # 'related_judge'


        ]
